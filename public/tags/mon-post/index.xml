<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mon, post on HeinrichHartmann.com</title>
    <link>/tags/mon-post/</link>
    <description>Recent content in mon, post on HeinrichHartmann.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/mon-post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Home Lab Observability</title>
      <link>/posts/home-lab-observability-2023/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/home-lab-observability-2023/</guid>
      <description>In this post, I will walk you through the observability tooling I am using form my home-lab. I have recently explained the infrastructure setup in this blog post.
Design Goals for the Observability Setup
Explore and try-out modern open-source observability tooling: OpenTelemetry, Prometheus, Loki, Jaeger, Grafana, &amp;hellip; Try out free-tier SaaS Observability Solutions: GrafanaCloud, LightStep, NewRelic, DataDog, &amp;hellip; Esablish best-practice observability for home-lab including: Synthetic availability measurements for all exposed web-services Log aggregation and query capabilities for docker and systemd logs Distributed tracing for the Ingress Proxy RED Metrics for all Web APIs Resource monitoring for all running containers Outline</description>
    </item>
    
    <item>
      <title>Home Lab Infrastructure</title>
      <link>/posts/home-lab-2023/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/home-lab-2023/</guid>
      <description>I have recently published the full configuration of my home-lab infrastructure on GitHub:
https://github.com/HeinrichHartmann/svc
In this post, I will give you a brief overview about the setup.
Design Goals:
Quick on-boarding of containerized services. Family members can use the services on any of their devices. No fiddling with IPs and Port names. Services have their own DNS names. Stored data is backed-up safely. Solution Summary:
Services are on-boarded by creating a directory with a docker-compose.</description>
    </item>
    
  </channel>
</rss>
